#!/bin/sh

# Загружаем переменные из .env
if [ -f "$(git rev-parse --show-toplevel)/.env" ]; then
  source "$(git rev-parse --show-toplevel)/.env"
else
  echo "Error: .env file not found in the project root."
  exit 1
fi

# Проверяем, что переменные загружены
if [ -z "$API_KEY" ] || [ -z "$TOKEN" ] || [ -z "$BOARD_NAME" ] || [ -z "$GITHUB_REPO" ]; then
  echo "Error: Missing required environment variables. Check your .env file."
  exit 1
fi

# Проверяем формат сообщения коммита
npx commitlint --edit "$1" || (
  echo 'Custom error message: Your commit message does not follow the conventional commit style. Please use one of the following types: Feat, Fix, Docs, Style, Refactor, Perf, Test, Chore, Starter.'
  exit 1
)

# Извлечение сообщения коммита
COMMIT_MSG=$(cat "$1")
echo "Commit Message: $COMMIT_MSG"

# Извлечение idShort и Типа изменений
ID_SHORT=$(echo "$COMMIT_MSG" | grep -oP '^\[\d+\]' | grep -oP '\d+')
TYPE=$(echo "$COMMIT_MSG" | grep -oP '\]\[[A-Za-z]+\]' | grep -oP '[A-Za-z]+')

if [ -z "$ID_SHORT" ] || [ -z "$TYPE" ]; then
  echo "Error: Commit message must include [id][Type]. Example: [6][Feat] Add new feature"
  exit 1
fi

# Формируем URL для получения ID доски
RESOLVED_BOARDS_URL=$(echo "$BOARDS_URL" | sed "s/{API_KEY}/$API_KEY/; s/{TOKEN}/$TOKEN/")
BOARD_ID=$(curl -s "$RESOLVED_BOARDS_URL" | jq -r ".[] | select(.name == \"$BOARD_NAME\") | .id")

if [ -z "$BOARD_ID" ]; then
  echo "Error: No Trello board found with the name \"$BOARD_NAME\"."
  exit 1
fi

# Формируем URL для получения карточек
RESOLVED_CARDS_URL=$(echo "$CARDS_URL" | sed "s/{BOARD_ID}/$BOARD_ID/; s/{API_KEY}/$API_KEY/; s/{TOKEN}/$TOKEN/")
CARD_ID=$(curl -s "$RESOLVED_CARDS_URL" | jq -r ".[] | select(.idShort == $ID_SHORT) | .id")
SHORT_LINK=$(curl -s "$RESOLVED_CARDS_URL" | jq -r ".[] | select(.idShort == $ID_SHORT) | .shortLink")

if [ -z "$CARD_ID" ]; then
  echo "Error: No Trello card found with idShort $ID_SHORT."
  exit 1
fi

# Формируем ссылку на коммит
COMMIT_SHA=$(git rev-parse HEAD)
REPO_URL="https://github.com/$GITHUB_REPO/commit/$COMMIT_SHA"
TRELLO_CARD_URL="https://trello.com/c/$SHORT_LINK"

# Обновляем карточку: добавляем ссылку на коммит в описание
CURRENT_DESC=$(curl -s "https://api.trello.com/1/cards/$CARD_ID?fields=desc&key=$API_KEY&token=$TOKEN" | jq -r '.desc')
UPDATED_DESC="$CURRENT_DESC\n\nLinked commit: $REPO_URL"

curl -s -X PUT -H "Content-Type: application/json" \
  -d "{\"desc\": \"$UPDATED_DESC\"}" \
  "https://api.trello.com/1/cards/$CARD_ID?key=$API_KEY&token=$TOKEN"

# Добавляем ссылку на карточку в сообщение коммита, если отсутствует
if ! echo "$COMMIT_MSG" | grep -q "$TRELLO_CARD_URL"; then
  echo "$COMMIT_MSG ($TRELLO_CARD_URL)" > "$1"
  echo "Added Trello card link to commit message."
fi

# Добавляем комментарий в карточку Trello
curl -s -X POST -H "Content-Type: application/json" -d "{\"text\": \"Commit linked: $COMMIT_MSG ($REPO_URL)\"}" \
  "https://api.trello.com/1/cards/$CARD_ID/actions/comments?key=$API_KEY&token=$TOKEN"

echo "Commit successfully linked to Trello card $ID_SHORT."
